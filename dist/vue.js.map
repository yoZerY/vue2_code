{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifeCycle.js","../src/init.js","../src/index.js"],"sourcesContent":["//重写数组部分方法\r\n\r\nlet oldArrayProto = Array.prototype //数组原型\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n//会改变原数组的方法\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice']\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function (...args) {\r\n        const result = oldArrayProto[method].call(this, ...args)\r\n        const ob = this.__ob__\r\n        //对新增的值检测\r\n        let inserted\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break;\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n            default:\r\n                break\r\n        }\r\n        if (inserted) { //inserted type Array\r\n            //this 指的是 谁调得方法就是谁\r\n            ob.obServerArray(inserted)\r\n        }\r\n\r\n        return result\r\n    }\r\n})\r\n","import {newArrayProto} from \"./array\";\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // Object.defineProperty() 只能劫持已存在得属性 （$set $delete）\r\n\r\n        Object.defineProperty(data, '__ob__', { //__ob__属性不可枚举\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n\r\n        if (Array.isArray(data)) {\r\n            //重写数组方法 7个编译方法 可修改数组本身\r\n            data.__proto__ = newArrayProto\r\n            this.obServerArray(data)\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n\r\n    walk(data) { //循环对象劫持属性\r\n        //重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n\r\n    obServerArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) { //属性劫持\r\n    observe(value) //递归劫持数据\r\n    Object.defineProperty(target, key, {\r\n        get() { //取值get\r\n            console.log(`取值get:${value}`);\r\n            return value\r\n        },\r\n        set(newValue) { //设置值set\r\n            console.log(`设置值set:${newValue}`);\r\n            if (newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    if (typeof data !== 'object' || data === null) { //只对对象进行劫持\r\n        return\r\n    }\r\n    if (data.__ob__ instanceof Observer) {\r\n        return data.__ob__\r\n    }\r\n    //如果一个对象已经被劫持 那就不需要再劫持了（添加一个实例 来判断是否劫持过）\r\n    return new Observer(data)\r\n}\r\n","import {observe} from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options //获取所有选项\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key] //vm._data.xxx\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data //data 可能是函数 可能是对象\r\n    data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n    vm._data = data\r\n    //数据劫持\r\n    observe(data)\r\n\r\n    //把vm.data 用vm代理\r\n    for (const key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n\r\n}\r\n","\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst startTagClose = /^\\s*(\\/?)>/\r\n\r\n\r\nexport function parseHTML(html) {\r\n\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = []\r\n    let currentParent\r\n    let root\r\n\r\n    function createAstElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            attrs,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            parent: null\r\n        }\r\n    }\r\n\r\n\r\n    function start(tag, attrs) {\r\n        const node = createAstElement(tag, attrs)\r\n        if (!root) {\r\n            root = node\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node\r\n    }\r\n\r\n    function charts(text) {\r\n        text = text.replace(/\\s/g, '')\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n\r\n    function end(tag) {\r\n        stack.pop()\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],//标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length)\r\n\r\n            let attr\r\n            let end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) { //非开始标签得结束\r\n                advance(attr[0].length)\r\n                match.attrs.push({\r\n                    name: attr[1], value: attr[3] || attr[4] || attr[5]\r\n                })\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        return false\r\n    }\r\n\r\n    while (html) {\r\n        let textEnd = html.indexOf(\"<\")\r\n        if (textEnd === 0) {\r\n            const startTagMatch = parseStartTag()\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd) //文本内容\r\n            if (text) {\r\n                advance(text.length)\r\n                charts(text)\r\n            }\r\n        }\r\n    }\r\n\r\n    return root\r\n}\r\n","//编译模板\r\n\r\nimport {parseHTML} from \"./parse\";\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\nfunction genProps(attrs) {\r\n    let str = ''\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        if (attr.name === 'style') {\r\n            let obj = {}\r\n            attr.value.split(';').forEach(e => {\r\n                let [key, value] = e.split(':')\r\n                obj[key] = value\r\n            })\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nfunction gen(node) {\r\n    const text = node.text\r\n    if (node.type === 1) {\r\n        return codeGen(node)\r\n    } else {\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            let tokens = []\r\n            let match\r\n            defaultTagRE.lastIndex = 0\r\n            let lastIndex = 0\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index\r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction genChildren(children) {\r\n    return children && children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction codeGen(ast) {\r\n    let children = genChildren(ast.children)\r\n    let code = (`_c('${ast.tag}', \r\n    ${ast.attrs.length ? genProps(ast.attrs) : 'null'}\r\n    ${ast.children.length ? `, ${children}` : ''})`)\r\n\r\n    return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n    //template 转为ast语法树\r\n    let ast = parseHTML(template)\r\n\r\n    //生成render 方法  虚拟DOM\r\n    let code = codeGen(ast)\r\n    code = `with(this){return ${code}}`\r\n    let render = new Function(code)\r\n    return render\r\n\r\n}\r\n","export function createElementVNode(vm, tag, data , ...children) {\r\n    if(data == null) {\r\n        data = {}\r\n    }\r\n    let key = data.key\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vNode(vm, tag, key, data, children)\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n    return vNode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\nfunction vNode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    }\r\n}\r\n","import {createElementVNode, createTextVNode} from \"./vdom\";\r\n\r\n\r\nfunction createElm(vNode) {\r\n    const {tag, data, children, text} = vNode\r\n    if (typeof tag === 'string') {\r\n        vNode.el = document.createElement(tag)\r\n        patchProps(vNode.el, data)\r\n        children && children.length && children.forEach(child => {\r\n            vNode.el.appendChild(createElm(child))\r\n        })\r\n    } else {\r\n        vNode.el = document.createTextNode(text)\r\n    }\r\n    return vNode.el\r\n}\r\n\r\nfunction patchProps(el, data) {\r\n    for (const key in data) {\r\n        if (key === 'style') {\r\n            for (const styleKey in data.style) {\r\n                el.style[styleKey] = data.style[styleKey]\r\n            }\r\n        } else {\r\n            el.setAttribute(key, data[key])\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction patch(oldVNode, vNode) {\r\n    const isRealElement = oldVNode.nodeType\r\n    if (isRealElement) {\r\n        const elm = oldVNode\r\n        const parentEl = elm.parentNode\r\n        let newEle = createElm(vNode)\r\n        parentEl.insertBefore(newEle, elm.nextSibling)\r\n        parentEl.removeChild(elm)\r\n\r\n        return newEle\r\n    } else {\r\n\r\n    }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function (vNode) { // vNode转化为真实DOM\r\n        const vm = this\r\n        const el = vm.$el\r\n        vm.$el = patch(el, vNode)\r\n    }\r\n    Vue.prototype._c = function () {\r\n        return createElementVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._v = function () {\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._s = function (value) {\r\n        if (typeof value === 'object') return value\r\n        return JSON.stringify(value)\r\n    }\r\n    Vue.prototype._render = function () {\r\n        return this.$options.render.call(this)\r\n    }\r\n}\r\n\r\n\r\nexport function mountComponent(vm, el) {\r\n    vm.$el = el\r\n    vm._update(vm._render())\r\n}\r\n\r\n// 1.生成相应数据  2.模板转换成AST语法树   3.ast转换成render函数\r\n// render 生成虚拟节点\r\n// 虚拟节点创造真实DOM\r\n","import {initState} from \"./state\";\r\nimport {compileToFunction} from \"./compiler/index\";\r\nimport {mountComponent} from \"./lifeCycle\";\r\n\r\nexport function initMixin(Vue) { // 给vue添加init方法(初始化方法)\r\n    Vue.prototype._init = function (options) {\r\n        const vm = this\r\n        vm.$options = options\r\n\r\n        //初始化状态\r\n        initState(vm)\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n\r\n        let opts = vm.$options\r\n        if (!opts.render) { //是否有render函数\r\n            let template\r\n            if (!opts.template && el) { //是否有template\r\n                template = el.outerHTML\r\n            } else {\r\n                if (el) {\r\n                    template = opts.template\r\n                }\r\n            }\r\n            //有template\r\n            if (template) {\r\n                //template 模板编译\r\n                const render = compileToFunction(template)\r\n                opts.render = render\r\n            }\r\n        }\r\n        mountComponent(vm, el)\r\n    }\r\n\r\n}\r\n\r\n","import {initMixin} from \"./init\";\r\nimport {initLifeCycle} from \"./lifeCycle\";\r\n\r\n\r\nfunction Vue(options) { //options为自定义选项\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue)\r\n\r\ninitLifeCycle(Vue)\r\n\r\nexport default Vue\r\n"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","ob","__ob__","inserted","slice","obServerArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","console","log","set","newValue","initState","vm","opts","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createAstElement","tag","attrs","type","children","parent","start","node","push","charts","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","str","i","obj","split","e","JSON","stringify","gen","codeGen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","createElementVNode","vNode","createTextVNode","undefined","createElm","el","document","createElement","patchProps","appendChild","createTextNode","styleKey","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentEl","parentNode","newEle","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","_update","$el","_c","arguments","_v","_s","_render","mountComponent","initMixin","_init","options","$mount","querySelector","outerHTML"],"mappings":"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"}